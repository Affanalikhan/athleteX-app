rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    // Users can read and write their own user document
    match /users/{userId} {
      allow read, write: if request.auth != null && request.auth.uid == userId;
    }
    
    // Athletes can read and write their own profile
    match /athletes/{userId} {
      allow read, write: if request.auth != null && request.auth.uid == userId;
      // Admins can read all athlete profiles
      allow read: if request.auth != null && 
                  exists(/databases/$(database)/documents/users/$(request.auth.uid)) &&
                  get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
    }
    
    // Assessment tests
    match /assessments/{assessmentId} {
      // Athletes can create and read their own assessments
      allow create: if request.auth != null && 
                    request.auth.uid == resource.data.athleteId;
      allow read: if request.auth != null && 
                  request.auth.uid == resource.data.athleteId;
      
      // Admins can read all assessments
      allow read: if request.auth != null && 
                  exists(/databases/$(database)/documents/users/$(request.auth.uid)) &&
                  get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
      
      // Athletes can update notes on their own assessments
      allow update: if request.auth != null && 
                    request.auth.uid == resource.data.athleteId &&
                    request.resource.data.keys().hasOnly(['notes']) &&
                    request.resource.data.keys().hasAll(['notes']);
    }
    
    // Performance metrics
    match /performance_metrics/{metricId} {
      // Athletes can create, read, update, and delete their own metrics
      allow create: if request.auth != null && 
                    request.auth.uid == request.resource.data.athleteId;
      allow read, update, delete: if request.auth != null && 
                                   request.auth.uid == resource.data.athleteId;
      
      // Admins can read all performance metrics
      allow read: if request.auth != null && 
                  exists(/databases/$(database)/documents/users/$(request.auth.uid)) &&
                  get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
    }
    
    // Social posts (placeholder for future implementation)
    match /social_posts/{postId} {
      // Athletes can create their own posts
      allow create: if request.auth != null && 
                    request.auth.uid == request.resource.data.athleteId;
      
      // Athletes can read all posts (public social feed)
      allow read: if request.auth != null;
      
      // Athletes can update/delete their own posts
      allow update, delete: if request.auth != null && 
                            request.auth.uid == resource.data.athleteId;
    }
    
    // Admin-only collections
    match /admin_data/{document} {
      allow read, write: if request.auth != null && 
                         exists(/databases/$(database)/documents/users/$(request.auth.uid)) &&
                         get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
    }
    
    // Deny all other requests
    match /{document=**} {
      allow read, write: if false;
    }
  }
}
